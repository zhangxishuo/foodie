<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.mapper.join.ItemsLeftJoinMapper" >
    <resultMap id="SearchItemsResultMap" type="com.imooc.vo.SearchItemsVO" >
        <id column="itemId" property="itemId" jdbcType="VARCHAR" />
        <result column="itemName" property="itemName" jdbcType="VARCHAR" />
        <result column="sellCounts" property="sellCounts" jdbcType="INTEGER" />
        <result column="imgUrl" property="imgUrl" jdbcType="VARCHAR" />
        <result column="price" property="price" jdbcType="INTEGER" />
    </resultMap>

    <select id="searchItems" resultMap="SearchItemsResultMap" parameterType="Map">
        SELECT
            i.id as itemId,
            i.item_name as itemName,
            i.sell_counts as sellCounts,
            ii.url as imgUrl,
            temp.price_discount as price
        FROM items i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        LEFT JOIN (
            SELECT item_id, MIN(price_discount) as price_discount
            FROM items_spec
            GROUP BY item_id
        ) temp ON i.id = temp.item_id
        WHERE ii.is_main = 1
        <if test="paramsMap.keywords != null and paramsMap.keywords != ''">
            AND i.item_name like '%${paramsMap.keywords}%'
        </if>
        ORDER BY
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                i.sell_counts DESC
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                temp.price_discount ASC
            </when>
            <otherwise>
                i.item_name ASC
            </otherwise>
        </choose>
    </select>

    <select id="searchItemsByThirdCat" resultMap="SearchItemsResultMap" parameterType="Map">
        SELECT
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        temp.price_discount as price
        FROM items i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        LEFT JOIN (
        SELECT item_id, MIN(price_discount) as price_discount
        FROM items_spec
        GROUP BY item_id
        ) temp ON i.id = temp.item_id
        WHERE ii.is_main = 1
        <if test="paramsMap.catId != null and paramsMap.catId != ''">
            AND i.cat_id = #{paramsMap.catId}
        </if>
        ORDER BY
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                i.sell_counts DESC
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                temp.price_discount ASC
            </when>
            <otherwise>
                i.item_name ASC
            </otherwise>
        </choose>
    </select>

    <resultMap id="ShopCartResultMap" type="com.imooc.vo.ShopCartVO">
        <id column="itemId" property="itemId" jdbcType="VARCHAR" />
        <result column="itemName" property="itemName" jdbcType="VARCHAR" />
        <result column="itemImgUrl" property="itemImgUrl" jdbcType="VARCHAR" />
        <result column="specId" property="specId" jdbcType="VARCHAR" />
        <result column="specName" property="specName" jdbcType="VARCHAR" />
        <result column="priceDiscount" property="priceDiscount" jdbcType="VARCHAR" />
        <result column="priceNormal" property="priceNormal" jdbcType="VARCHAR" />
    </resultMap>

    <select id="queryItemsBySpecIds" resultMap="ShopCartResultMap" parameterType="List">
        SELECT
            items.id as itemId,
            items.item_name as itemName,
            items_img.url as itemImgUrl,
            items_spec.id as specId,
            items_spec.name as specName,
            items_spec.price_discount as priceDiscount,
            items_spec.price_normal as priceNormal
        FROM items_spec
        LEFT JOIN items ON items_spec.item_id = items.id
        LEFT JOIN items_img ON items_img.item_id = items.id
        WHERE items_img.is_main = 1
        AND items_spec.id IN
        <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">
            #{specId}
        </foreach>
    </select>

    <update id="decreaseItemSpecStock">
        update items_spec
        set stock = stock - #{pendingCounts}
        where id = #{specId} and stock >= #{pendingCounts}
    </update>
</mapper>